// <auto-generated />
using System;
using ArcticFlow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArcticFlow.Migrations
{
    [DbContext(typeof(ArcticDataContext))]
    partial class ArcticDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArcticFlow.Models.Entities.Arctic", b =>
                {
                    b.Property<int>("ArcticID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Descricao");

                    b.Property<string>("Email");

                    b.Property<string>("Empresa");

                    b.Property<int>("Endereco");

                    b.Property<string>("FotoPerfil");

                    b.Property<string>("Nome");

                    b.Property<int?>("RedeSocialID");

                    b.Property<int>("Telefone");

                    b.HasKey("ArcticID");

                    b.HasIndex("RedeSocialID");

                    b.ToTable("Arctics");
                });

            modelBuilder.Entity("ArcticFlow.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArcticID");

                    b.Property<string>("Descrição");

                    b.Property<string>("Imagem");

                    b.Property<string>("Nome");

                    b.HasKey("CategoriaID");

                    b.HasIndex("ArcticID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ArcticFlow.Models.Entities.New", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .IsRequired();

                    b.Property<int?>("CategoriaID");

                    b.Property<string>("Corpo")
                        .IsRequired();

                    b.Property<DateTime>("Data");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("RedeSocialID");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.Property<string>("URLImage");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("RedeSocialID");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ArcticFlow.Models.Entities.RedeSocial", b =>
                {
                    b.Property<int>("RedeSocialID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Facebook");

                    b.Property<string>("Instagram");

                    b.Property<string>("Site");

                    b.Property<string>("Telegram");

                    b.Property<string>("Twitter");

                    b.Property<string>("Whatsapp");

                    b.Property<string>("Youtube");

                    b.HasKey("RedeSocialID");

                    b.ToTable("RedesSociais");
                });

            modelBuilder.Entity("ArcticFlow.Models.Entities.Arctic", b =>
                {
                    b.HasOne("ArcticFlow.Models.Entities.RedeSocial", "RedeSocial")
                        .WithMany()
                        .HasForeignKey("RedeSocialID");
                });

            modelBuilder.Entity("ArcticFlow.Models.Entities.Categoria", b =>
                {
                    b.HasOne("ArcticFlow.Models.Entities.Arctic")
                        .WithMany("Categorias")
                        .HasForeignKey("ArcticID");
                });

            modelBuilder.Entity("ArcticFlow.Models.Entities.New", b =>
                {
                    b.HasOne("ArcticFlow.Models.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");

                    b.HasOne("ArcticFlow.Models.Entities.RedeSocial", "RedeSocial")
                        .WithMany()
                        .HasForeignKey("RedeSocialID");
                });
#pragma warning restore 612, 618
        }
    }
}
